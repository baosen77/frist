/*题目描述
用两个栈来实现一个队列，完成队列的Push和Pop操作。
队列中的元素为int类型。

输入
每个输入文件包含一个测试样例。
对于每个测试样例，第一行输入一个n(1<=n<=100000)，代表队列操作的个数。
接下来的n行，每行输入一个队列操作：
1. PUSH X 向队列中push一个整数x(x>=0)
2. POP 从队列中pop一个数。

输出
对应每个测试案例，打印所有pop操作中从队列pop中的数字。如果执行pop操作时，队列为空，则打印-1。
样例输入
3
PUSH 10
POP
POP
样例输出
10
-1*/
#include<iostream>
#include<stack>
#include<string>
using namespace std;
class Queue
{
private:
	stack<int>s1;
	stack<int>s2;
public:
	void push(int a)//进栈
	{
		s1.push(a);
	}
	int pop()//出栈
	{
		int m,k=0;
		if (s2.empty())
		{
			while (!s1.empty())
			{
				k++;
				s2.push(s1.top());
				s1.pop();
			}
		}
		if (k)
		{
			m = s2.top();
			s2.pop();
			return m;
		}
		else return -1;
	}
};
int main()
{
	Queue q;
	int n;
	cin >> n;
	while (n--)
	{
		string s;
		cin >> s;
		if (s == "PUSH")
		{
			int num;
			cin >> num;
			q.push(num);
		}
		if (s == "POP")
		{
			cout << q.pop() << endl;
		}
	}
}
